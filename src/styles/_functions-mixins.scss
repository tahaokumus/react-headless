@import "@/styles/variables";

@function responsive($minSize, $maxSize, $minRes: $mobileRes, $maxRes: $desktopRes) {
  $resDif: $maxRes - $minRes;
  $sizeDif: $maxSize - $minSize;
  $sizePerRes: calc($resDif / $sizeDif);

  @return "clamp(#{$minSize}px, calc((max((100vw - #{$minRes}px), 0px) / #{$sizePerRes}) + #{$minSize}px), #{$maxSize}px)";
}

@mixin maskImage($url) {
  mask-image: url($url);
  -webkit-mask-image: url($url);
}

@mixin padding($values...) {
  @if length($values) == 1 {
    padding-block-start: nth($values, 1);
    padding-inline-end: nth($values, 1);
    padding-block-end: nth($values, 1);
    padding-inline-start: nth($values, 1);
  } @else if length($values) == 2 {
    padding-block-start: nth($values, 1);
    padding-inline-end: nth($values, 2);
    padding-block-end: nth($values, 1);
    padding-inline-start: nth($values, 2);
  } @else if length($values) == 3 {
    padding-block-start: nth($values, 1);
    padding-inline-end: nth($values, 2);
    padding-block-end: nth($values, 3);
    padding-inline-start: nth($values, 2);
  } @else if length($values) == 4 {
    padding-block-start: nth($values, 1);
    padding-inline-end: nth($values, 2);
    padding-block-end: nth($values, 3);
    padding-inline-start: nth($values, 4);
  }
}

@mixin margin($values...) {
  @if length($values) == 1 {
    margin-block-start: nth($values, 1);
    margin-inline-end: nth($values, 1);
    margin-block-end: nth($values, 1);
    margin-inline-start: nth($values, 1);
  } @else if length($values) == 2 {
    margin-block-start: nth($values, 1);
    margin-inline-end: nth($values, 2);
    margin-block-end: nth($values, 1);
    margin-inline-start: nth($values, 2);
  } @else if length($values) == 3 {
    margin-block-start: nth($values, 1);
    margin-inline-end: nth($values, 2);
    margin-block-end: nth($values, 3);
    margin-inline-start: nth($values, 2);
  } @else if length($values) == 4 {
    margin-block-start: nth($values, 1);
    margin-inline-end: nth($values, 2);
    margin-block-end: nth($values, 3);
    margin-inline-start: nth($values, 4);
  }
}
